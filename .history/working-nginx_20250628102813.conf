# 안전한 Nginx 설정 - 기존 설정 기반으로 최소 수정
# 기존 설정과 거의 동일하지만 보안만 강화

server {
    listen      80;
    listen      443 ssl http2;
    server_name  www.doberman.kr doberman.kr;

    access_log  /data/logs/www.doberman.kr.access.log;
    error_log /data/logs/www.doberman.kr.error.log;

    client_max_body_size 512M;

    ssl_certificate   /etc/letsencrypt/live/doberman.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/doberman.kr/privkey.pem;

    ssl_session_timeout 5m;

    # 보안 강화 (기존 취약한 프로토콜 제거)
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # 기존과 동일한 프록시 설정
    location / {
        proxy_pass http://localhost:3000;  # Next.js 앱으로 프록시
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 정적 파일은 Next.js를 통해 처리 (기존 alias 방식 제거)
    location /_next/static/ {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location /public/ {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public";
    }

    # 기존과 동일한 에러 페이지 설정
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
} 